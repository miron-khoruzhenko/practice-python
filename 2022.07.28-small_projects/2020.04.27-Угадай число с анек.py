'''
random.seed([X], version=2) - инициализация генератора случайных чисел. Если X не указан, используется системное время.
random.getstate() - внутреннее состояние генератора.
random.setstate(state) - восстанавливает внутреннее состояние генератора. Параметр state должен быть получен функцией getstate().
random.getrandbits(N) - возвращает N случайных бит.
random.randrange(start, stop, step) - возвращает случайно выбранное число из последовательности.
random.randint(A, B) - случайное целое число N, A ≤ N ≤ B.
random.choice(sequence) - случайный элемент непустой последовательности.
random.shuffle(sequence, [rand]) - перемешивает последовательность (изменяется сама последовательность). Поэтому функция не работает для неизменяемых объектов.
random.sample(population, k) - список длиной k из последовательности population.
random.random() - случайное число от 0 до 1.
random.uniform(A, B) - случайное число с плавающей точкой, A ≤ N ≤ B (или B ≤ N ≤ A).
random.triangular(low, high, mode) - случайное число с плавающей точкой, low ≤ N ≤ high. Mode - распределение.
random.betavariate(alpha, beta) - бета-распределение. alpha>0, beta>0. Возвращает от 0 до 1.
random.expovariate(lambd) - экспоненциальное распределение. lambd равен 1/среднее желаемое. Lambd должен быть отличным от нуля. Возвращаемые значения от 0 до плюс бесконечности, если lambd положительно, и от минус бесконечности до 0, если lambd отрицательный.
random.gammavariate(alpha, beta) - гамма-распределение. Условия на параметры alpha>0 и beta>0.
random.gauss(значение, стандартное отклонение) - распределение Гаусса.
random.lognormvariate(mu, sigma) - логарифм нормального распределения. Если взять натуральный логарифм этого распределения, то вы получите нормальное распределение со средним mu и стандартным отклонением sigma. mu может иметь любое значение, и sigma должна быть больше нуля.
random.normalvariate(mu, sigma) - нормальное распределение. mu - среднее значение, sigma - стандартное отклонение.
random.vonmisesvariate(mu, kappa) - mu - средний угол, выраженный в радианах от 0 до 2π, и kappa - параметр концентрации, который должен быть больше или равен нулю. Если каппа равна нулю, это распределение сводится к случайному углу в диапазоне от 0 до 2π.
random.paretovariate(alpha) - распределение Парето.
random.weibullvariate(alpha, beta) - распределение Вейбулла.
'''

import random
import time

anek1 = ('''Чтобы систематически врать царице, что она — "всех милее",
зеркало просило, чтобы его протирали водкой.''')
anek2 = ('До конца карантина осталось 1000 рублей.')
anek3 = ('Полиция накрыла фитнес-притон.')
anek4 = ('Благодаря телевидению дурак дурака видит издалека.')
anek5 = ('Раньше я к людям относился хорошо, а теперь взаимно...')
anek6 = ('Пошел куда глаза глядят - и уперся в женскую грудь.')
anek7 = ('В честной борьбе обычно побеждает жулик.')
anek8 = ('Есть такая категория соседей: перфорасты.')
anek9 = ('В России две беды: ожидание и реальность.')
anek10 = ('Крестьяне не хотели сеять панику, но больше сеять было нечего.')
anek11 = ('Афроамериканец набил себе татуировку, но потерял её.')
anek12 = ('На рынке ценных бумаг лидирует туалетная.')
anek13 = ('Быстро сбывшаяся мечта как-то очень уж похожа на подвох.')
anek14 = ('Фото Никиты Джигурды изгоняет из дома более слабую нечисть')
anek15 = ('Чем меньше думаешь, тем больше у тебя единомышленников')
anek16 = ('Никогда не пользуйтесь туалетом во сне... Это ловушка!')
anek17 = ('Как бы мы лечились, если бы не Интернет.')
anek18 = ('Лучше быть без ума от женщины, чем дураком от природы')

anekList = [anek1, anek2, anek4, anek4, anek5, anek6, anek7, anek8, anek9, anek10, anek11, anek12, anek13, anek14, anek15, anek16, anek17, anek18]

randomInt = random.randint(0, 100)
#print(randomInt)

def my_abs(a):
    return a if a > 0 else -a


attempts = 0

print('Привет, хочешь поиграть? Хорошо...')
print('Как мне тебя называть?')
userName = input('>Зови меня ')
print()
print('=' * 50)
print("Привет " + userName + "! Давай начинать...")
time.sleep(0)  # 3

print('''
Правила игры довольно просты. Тебе нужно
угадать число которое мы загадали. А мы будет
тебе в этом помогать. Довольно просто, не правда ли?''')
time.sleep(0)  # 5
print()
print('''Чтож не будем терять времени зря. Мы уже загадали,
введи свое первое число от 0 до 100. Что бы выйти напиши "0".''')
print('=' * 50)

userInt = input()

while str(userInt).isdigit() == False:
    print('Пожалуйста введите ТОЛЬКО число от 0 до 100')
    userInt  = input()

userInt = int(userInt)
    
while userInt != 0 and userInt != randomInt:

    #print('Не правильно ', end='')
    myabsInt = randomInt - userInt
    attempts += 1
    
    if my_abs(myabsInt) > 50:
        print('Сожалею, не правильно и даже не близко.')
        userInt = int(input())
        print()
    elif 50 >= my_abs(myabsInt) > 30:
        print('Не правильно но не то что бы слишком.')        
        userInt = int(input())
        print()
        
    elif 30 >= my_abs(myabsInt) > 20:
        print('Неа, однако ты относительнго близко!')
        userInt = int(input())
        print()
        
    elif 20 >= my_abs(myabsInt) > 5:
        print('Нет, но довольно близко')
        userInt = int(input())
        print()
    elif 5 >= my_abs(myabsInt) >= 0:
        print('Не верно но уже очень очень близко')
        userInt = int(input())
        print()
        
    print('*'*20)
    print('Вот тебе анекдот за 300 ...')
    print(random.choice(anekList))
    print('*'*20)
    print()
    
if userInt == randomInt and userInt != 0:
    print('Поздравляю ' + str(userName) + ' ты нашел число всего лишь за ' + str(attempts) + ' попыток')

else:
    exit()
